{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marianaalvaro/Desktop/cs1300-development/src/FilteredList.jsx\";\nimport React, { useState } from 'react';\nimport DisplayList from './DisplayList';\nimport NavBar from './NavBar';\nexport default class FilteredList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.matchesFilterSize = this.matchesFilterSize.bind(this);\n    this.onSelectFilterSize = this.onSelectFilterSize.bind(this);\n    this.matchesFilterExercise = this.matchesFilterExercise.bind(this);\n    this.onSelectFilterExercise = this.onSelectFilterExercise.bind(this);\n    this.sortChoice = this.sortChoice.bind(this);\n    this.sortByPrice = this.sortByPrice.bind(this);\n    this.addToCart = this.addToCart.bind(this);\n    this.state = {\n      size: \"All\",\n      exercise: \"All\",\n      sortType: \"asc\",\n      cart: [],\n      totalprice: 0 // currentDog: {\n      //     breed: '',\n      //     size: '',\n      //     exercise: '',\n      //     price: ''\n      // },\n      // dogList: this.props.list\n\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(this.state);\n  }\n\n  onSelectFilterSize(event) {\n    this.setState({\n      size: event\n    });\n  }\n\n  matchesFilterSize(item) {\n    if (this.state.size === \"All\") {\n      return true;\n    } else if (this.state.size === item.size) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  onSelectFilterExercise(event) {\n    this.setState({\n      exercise: event\n    });\n  }\n\n  matchesFilterExercise(item) {\n    if (this.state.exercise === \"All\") {\n      return true;\n    } else if (this.state.exercise === item.exercise) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  sortByPrice(items) {\n    if (this.state.sortType === 'asc') {\n      items.sort((a, b) => {\n        return a.price - b.price;\n      });\n    } else {\n      items.sort((a, b) => {\n        return b.price - a.price;\n      });\n    }\n  }\n\n  sortChoice(event) {\n    this.setState({\n      sortType: event\n    });\n  }\n\n  addToCart(card) {\n    let itemInCart = this.state.cart.find(item => card.breed === item.breed);\n\n    if (itemInCart) {\n      // const cart = this.state.cart\n      card.quantity++;\n      const cart = this.state.cart;\n      this.setState({\n        cart\n      });\n    } else {\n      const cart = [...this.state.cart, card];\n      card.quantity++;\n      this.setState({\n        cart\n      });\n    }\n\n    const totalprice = this.state.totalprice + card.price;\n    this.setState({\n      totalprice\n    }); // console.log(this.state.cart)\n    // console.log(this.state.totalprice)\n    // } else {\n    //     const cart = this.state.cart\n    //     card.quantity++\n    //     this.setState({cart})\n    //     console.log(cart)\n    // }\n    // CART.push(card)\n    // console.log(CART)\n    // this.setState({dogs: [card]})\n    // this.setState({totalprice: this.state.totalprice + event.target.value})\n    // let newCart = [...dogs]\n    // let itemInCart = newCart.find(item => dog.breed === item.breed)\n    // if(itemInCart){\n    //     itemInCart.quantity++\n    // } else {\n    //     itemInCart = {...dog, quantity: 1}\n    // }\n    // newCart.push(itemInCart)\n    // const dogs = [...this.state.dogs, newCart]\n    // this.setState({dogs})\n  } // removeFromCart(toRemove){\n  // const newDog = this.state.currentDog\n  // const dogs = dogs.filter(dog => dog !== toRemove)\n  // this.setState({dogs})\n  // }\n  // getTotal(){\n  //     return dogs.reduce((sum, {cost, quantity}) => sum + cost*quantity, 0)\n  // }\n  // makeCartCard(card, index){\n  //     return(\n  //       <Card border=\"info\" className=\"text-center card\" style={{ width: '18rem' }} key={index} >\n  //         <Card.Img variant=\"top\" src=\"holder.js/100px180\" src={card.image}/>\n  //         <Card.Body>\n  //           <Card.Title>{card.breed}</Card.Title>\n  //           <Card.Text>\n  //             <p>\n  //               <h5>${card.price}</h5>\n  //               size: {card.size}\n  //               <br/>\n  //               exercise needed: {card.exercise}\n  //             </p>\n  //           </Card.Text>\n  //           <Button  variant=\"info\" >Remove</Button> \n  //           {/* onClick={this.props.onClick} */}\n  //         </Card.Body>\n  //       </Card>\n  //     )\n  //   }\n\n\n  render() {\n    const items = this.props.list.filter(this.matchesFilterSize).filter(this.matchesFilterExercise);\n    console.log(items);\n    this.sortByPrice(items);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        onSelect: this.onSelectFilterSize,\n        onSelect2: this.onSelectFilterExercise,\n        onSelect3: this.sortChoice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DisplayList, {\n        list: items,\n        add: this.addToCart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Cart, {\n        cart: this.state.cart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/marianaalvaro/Desktop/cs1300-development/src/FilteredList.jsx"],"names":["React","useState","DisplayList","NavBar","FilteredList","Component","constructor","props","matchesFilterSize","bind","onSelectFilterSize","matchesFilterExercise","onSelectFilterExercise","sortChoice","sortByPrice","addToCart","state","size","exercise","sortType","cart","totalprice","componentDidUpdate","prevProps","console","log","event","setState","item","items","sort","a","b","price","card","itemInCart","find","breed","quantity","render","list","filter"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport DisplayList from './DisplayList';\nimport NavBar from './NavBar'\n\nexport default class FilteredList extends React.Component {\n    \n    constructor(props){\n        super(props)\n        this.matchesFilterSize = this.matchesFilterSize.bind(this)\n        this.onSelectFilterSize = this.onSelectFilterSize.bind(this)\n        this.matchesFilterExercise = this.matchesFilterExercise.bind(this)\n        this.onSelectFilterExercise = this.onSelectFilterExercise.bind(this)\n        this.sortChoice = this.sortChoice.bind(this)\n        this.sortByPrice = this.sortByPrice.bind(this)\n        this.addToCart = this.addToCart.bind(this)\n        this.state = {\n            size: \"All\",\n            exercise: \"All\",\n            sortType: \"asc\",\n            cart: [],\n            totalprice: 0\n            // currentDog: {\n            //     breed: '',\n            //     size: '',\n            //     exercise: '',\n            //     price: ''\n            // },\n            // dogList: this.props.list\n        }\n        \n    }\n    componentDidUpdate(prevProps){\n        console.log(this.state)\n    }\n\n    onSelectFilterSize(event){\n        this.setState({size: event})\n    }\n    matchesFilterSize(item){\n        if(this.state.size === \"All\"){\n            return true\n        } else if (this.state.size === item.size) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    onSelectFilterExercise(event){\n        this.setState({exercise: event})\n    }\n\n    matchesFilterExercise(item){\n        if(this.state.exercise === \"All\"){\n            return true\n        } else if (this.state.exercise === item.exercise) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    sortByPrice(items){\n        if(this.state.sortType === 'asc'){\n            items.sort((a,b) => {\n                return a.price - b.price\n            }) \n        } else {\n            items.sort((a,b) => {\n                return b.price - a.price\n            })   \n        }\n    }\n    sortChoice(event){\n        this.setState({sortType: event})\n    }\n\n\n    addToCart(card) {\n        let itemInCart = this.state.cart.find(item => card.breed === item.breed)\n        if(itemInCart){\n            // const cart = this.state.cart\n            card.quantity++\n            const cart = this.state.cart\n            this.setState({cart})\n        } else {\n            const cart = [...this.state.cart, card]\n            card.quantity++\n            this.setState({cart})\n        }\n        const totalprice = this.state.totalprice + card.price\n        this.setState({totalprice})\n        // console.log(this.state.cart)\n        // console.log(this.state.totalprice)\n    \n    \n            \n        // } else {\n        //     const cart = this.state.cart\n        //     card.quantity++\n        //     this.setState({cart})\n        //     console.log(cart)\n        // }\n        \n        \n        // CART.push(card)\n        // console.log(CART)\n        // this.setState({dogs: [card]})\n        // this.setState({totalprice: this.state.totalprice + event.target.value})\n        // let newCart = [...dogs]\n        // let itemInCart = newCart.find(item => dog.breed === item.breed)\n        // if(itemInCart){\n        //     itemInCart.quantity++\n        // } else {\n        //     itemInCart = {...dog, quantity: 1}\n        // }\n        // newCart.push(itemInCart)\n        // const dogs = [...this.state.dogs, newCart]\n        // this.setState({dogs})\n    }\n\n    // removeFromCart(toRemove){\n        // const newDog = this.state.currentDog\n        // const dogs = dogs.filter(dog => dog !== toRemove)\n        // this.setState({dogs})\n    // }\n\n    // getTotal(){\n    //     return dogs.reduce((sum, {cost, quantity}) => sum + cost*quantity, 0)\n    // }\n\n    // makeCartCard(card, index){\n    //     return(\n    //       <Card border=\"info\" className=\"text-center card\" style={{ width: '18rem' }} key={index} >\n    //         <Card.Img variant=\"top\" src=\"holder.js/100px180\" src={card.image}/>\n    //         <Card.Body>\n    //           <Card.Title>{card.breed}</Card.Title>\n    //           <Card.Text>\n    //             <p>\n    //               <h5>${card.price}</h5>\n    //               size: {card.size}\n    //               <br/>\n    //               exercise needed: {card.exercise}\n    //             </p>\n    //           </Card.Text>\n    //           <Button  variant=\"info\" >Remove</Button> \n    //           {/* onClick={this.props.onClick} */}\n    //         </Card.Body>\n    //       </Card>\n    //     )\n    //   }\n\n    render(){\n        const items = this.props.list.filter(this.matchesFilterSize).filter(this.matchesFilterExercise)\n        console.log(items)\n        this.sortByPrice(items)\n        return(\n            <div>\n                <NavBar onSelect={this.onSelectFilterSize} onSelect2={this.onSelectFilterExercise} onSelect3={this.sortChoice}/>\n                <DisplayList list={items} add={this.addToCart}/>   \n                <Cart cart={this.state.cart}/>\n            </div>\n            \n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}